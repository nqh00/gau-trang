server {
    listen 80;
    listen [::]:80;
    server_name gautrang.xyz;

    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name gautrang.xyz;
    ssl_certificate /etc/letsencrypt/live/gautrang.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/gautrang.xyz/privkey.pem; # managed by Certbot
    ssl_trusted_certificate /etc/letsencrypt/live/gautrang.xyz/chain.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    add_header Strict-Transport-Security "max-age=31536000" always;
    ssl_stapling on;
    ssl_stapling_verify on;

    # use a variable to store the upstream proxy
    set $jellyfin 127.0.0.1;

    ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
    client_max_body_size 20M;

    # Jellyfin
    location / {
        # Proxy main Jellyfin traffic

        # The / at the end is significant.
        # https://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/

        proxy_pass http://$jellyfin:8096;

        proxy_pass_request_headers on;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;

        # Disable buffering when the nginx proxy gets very resource heavy upon streaming
        proxy_buffering off;
    }

    # location block for Fancy index directory that auto mounted by rclone
    location /home {
        auth_basic "Dang nhap moi vao duoc";
        auth_basic_user_file /etc/nginx/.htpasswd;
        alias /var/www/html;
        fancyindex on;
        fancyindex_exact_size off;
        fancyindex_header /assets/header.html; # file will be placed in /usr/share/nginx/html/assets
        fancyindex_footer /assets/footer.html; # file will be placed in /usr/share/nginx/html/assets
        fancyindex_time_format "%B %e";
    }

    # locatation block for fancyindex accessing header and footer without being reversed proxy
    location /assets/ {}

    location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass http://$jellyfin:8096;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Protocol $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
    }

    # Cache Video Streams
#    location ~* ^/Videos/(.*)/(?!live) {
#        slice 2m;
#        proxy_cache jellyfin-videos;
#        proxy_cache_valid 200 206 301 302 30d;
#        proxy_ignore_headers Expires Cache-Control Set-Cookie X-Accel-Expires;
#        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
#        proxy_connect_timeout 15s;
#        proxy_http_version 1.1;
#        proxy_set_header Connection "";
#        proxy_set_header Range $slice_range;
#        proxy_cache_lock on;
#        proxy_cache_lock_age 60s;
#        proxy_pass http://$jellyfin:8096;
#        proxy_cache_key "jellyvideo$uri?MediaSourceId=$arg_MediaSourceId&VideoCodec=$arg_VideoCodec&AudioCodec=$arg_AudioCodec&AudioStreamIndex=$arg_AudioStreamIndex&VideoBitrate=$arg_VideoBitrate&AudioBitrate=$arg_AudioBitrate&SubtitleMethod=$arg_SubtitleMethod&TranscodingMaxAudioChannels=$arg_TranscodingMaxAudioChannels&RequireAvc=$arg_RequireAvc&SegmentContainer=$arg_SegmentContainer&MinSegments=$arg_MinSegments&BreakOnNonKeyFrames=$arg_BreakOnNonKeyFrames&h264-profile=$h264Profile&h264-level=$h264Level&slicerange=$slice_range";
#    }
}

